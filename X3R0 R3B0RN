local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Xero Hub" .. Fluent.Version,
    SubTitle = "by @wockyrituals",
    TabWidth = 195,
    Size = UDim2.fromOffset(525, 325),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Aqua",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

--Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
local Tabs = {
    Main = Window:AddTab({ Title = "Xero Reborn V1", Icon = "crosshair" }),
    V2 = Window:AddTab({ Title = "Execute V2", Icon = "lock" }),
    V3 = Window:AddTab({ Title = "Execute V3", Icon = "lock" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

Tabs.Main:AddParagraph({
        Title = "S H O O T I N G",
        Content = ""
    })

local Dropdown = Tabs.Main:AddDropdown("Dropdown", {
        Title = "Shooting Type",
        Values = {"Silent Aim", "Silent Aim V2", "High Arc", "Low Arc"},
        Multi = false,
        Default = 1,
    })

local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Enable Shooting", Default = false })

Tabs.Main:AddParagraph({
        Title = "I N D I C A T O R",
        Content = ""
    })
    
local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Enable Indicator", Default = false })

local Colorpicker = Tabs.Main:AddColorpicker("Colorpicker", {
        Title = "Indicator Color",
        Default = Color3.fromRGB(96, 205, 255)
    })

Tabs.Main:AddParagraph({
        Title = "M A G S",
        Content = ""
    })
    
local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Enable Reach", Default = false })

local Slider = Tabs.Main:AddSlider("Slider", {
        Title = "Reach Distance",
        Description = "",
        Default = 0,
        Min = 0,
        Max = 15,
        Rounding = 1,
        Callback = function(Value)
            print("Slider was changed:", Value)
        end
    })

    Slider:OnChanged(function(Value)
        print("Slider changed:", Value)
    end)
    
    local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Enable Ball Magnet", Default = false })
    
    local Slider = Tabs.Main:AddSlider("Slider", {
        Title = "Magnet Distance",
        Description = "",
        Default = 0,
        Min = 0,
        Max = 25,
        Rounding = 1,
        Callback = function(Value)
            print("Slider was changed:", Value)
        end
    })

    Slider:OnChanged(function(Value)
        print("Slider changed:", Value)
    end)
    
    Tabs.V2:AddButton({
        Title = "Execute V2",
        Description = "Paid Version",
        Callback = function()
            Window:Dialog({
                Title = "Execute V2?",
                Content = "",
                Buttons = {
                    {
                        Title = "✅️",
                        Callback = function()
                        loadstring(game:HttpGet("https://raw.githubusercontent.com/XeroReborn/Test/refs/heads/main/CoinCham"))()
                            print("Confirmed the dialog.")
                        end
                    },
                    {
                        Title = "❎️",
                        Callback = function()
                            print("Cancelled the dialog.")
                        end
                    }
                }
            })
        end
    })

    Tabs.V3:AddButton({
        Title = "Execute V3",
        Description = "Expensive Version",
        Callback = function()
            Window:Dialog({
                Title = "Execute V3?",
                Content = "",
                Buttons = {
                    {
                        Title = "✅️",
                        Callback = function()
                        loadstring(game:HttpGet("https://raw.githubusercontent.com/XeroReborn/SaintfulSinners/refs/heads/main/MM2ScriptV4"))()
                            print("Confirmed the dialog.")
                        end
                    },
                    {
                        Title = "❎️",
                        Callback = function()
                            print("Cancelled the dialog.")
                        end
                    }
                }
            })
        end
    })
    
    
    
    -- Addons:
-- SaveManager (Allows you to have a configuration system)
-- InterfaceManager (Allows you to have a interface managment system)

-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)


Window:SelectTab(1)

Fluent:Notify({
    Title = "Xero",
    Content = "The script has been loaded.",
    Duration = 5
})

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
