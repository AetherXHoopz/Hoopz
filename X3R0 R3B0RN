local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\137\181","\199\167\155\55\18\178\151\147"),function(v42) if (v9(v42,2)==81) then local v102=0;while true do if (0==v102) then v30=v8(v11(v42,1,2 -1 ));return "";end end else local v103=v10(v8(v42,16));if v30 then local v114=v13(v103,v30);v30=nil;return v114;else return v103;end end end);local function v31(v43,v44,v45) if v45 then local v104=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v104-(v104%1) ;else local v105=0;local v106;while true do if (v105==0) then v106=2^(v44-(2 -1)) ;return (((v43%(v106 + v106))>=v106) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (1==v46) then return v47;end if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end if (v48==1) then return (v50 * 256) + v49 ;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==1) then return (v55 * 16777216) + (v54 * 65536) + (v53 * 256) + v52 ;end if (v51==0) then v52,v53,v54,v55=v9(v27,v29,v29 + 3 );v29=v29 + (7 -3) ;v51=1;end end end local function v35() local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==2) then v61=v31(v58,21,31);v62=((v31(v58,32)==1) and  -1) or 1 ;v56=3;end if (v56==1) then v59=1;v60=(v31(v58,1,20) * (2^32)) + v57 ;v56=2;end if (v56==3) then if (v61==0) then if (v60==0) then return v62 * 0 ;else v61=1;v59=0;end elseif (v61==(5272 -3225)) then return ((v60==0) and (v62 * ((620 -(555 + 64))/0))) or (v62 * NaN) ;end return v16(v62,v61-(1954 -(857 + 74)) ) * (v59 + (v60/((570 -(367 + 201))^52))) ;end if (v56==0) then v57=v34();v58=v34();v56=1;end end end local function v36(v63) local v64=0;local v65;local v66;while true do if (v64==3) then return v14(v66);end if (v64==2) then v66={};for v115=1, #v65 do v66[v115]=v10(v9(v11(v65,v115,v115)));end v64=3;end if (v64==0) then v65=nil;if  not v63 then v63=v34();if (v63==0) then return "";end end v64=1;end if (v64==1) then v65=v11(v27,v29,(v29 + v63) -1 );v29=v29 + v63 ;v64=2;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v67={};local v68={};local v69={};local v70={v67,v68,nil,v69};local v71=v34();local v72={};for v80=1,v71 do local v81=0;local v82;local v83;while true do if (v81==0) then v82=v32();v83=nil;v81=1;end if (v81==1) then if (v82==1) then v83=v32()~=(0 + 0) ;elseif (v82==2) then v83=v35();elseif (v82==3) then v83=v36();end v72[v80]=v83;break;end end end v70[880 -(282 + 595) ]=v32();for v84=1,v34() do local v85=v32();if (v31(v85,1,1)==0) then local v110=v31(v85,2,3);local v111=v31(v85,4,6);local v112={v33(),v33(),nil,nil};if (v110==0) then local v122=0;while true do if (v122==0) then v112[3]=v33();v112[4]=v33();break;end end elseif (v110==(1 + 0)) then v112[3]=v34();elseif (v110==2) then v112[3]=v34() -((2 -0)^(1081 -(68 + 997))) ;elseif (v110==3) then v112[3]=v34() -(2^(1286 -(226 + 1044))) ;v112[4]=v33();end if (v31(v111,1,4 -3 )==1) then v112[2]=v72[v112[119 -(32 + 85) ]];end if (v31(v111,2,2 + 0 )==1) then v112[3]=v72[v112[3]];end if (v31(v111,3,3)==1) then v112[4]=v72[v112[4]];end v67[v84]=v112;end end for v86=1,v34() do v68[v86-1 ]=v39();end return v70;end local function v40(v74,v75,v76) local v77=v74[1];local v78=v74[2];local v79=v74[3];return function(...) local v88=v77;local v89=v78;local v90=v79;local v91=v38;local v92=1 + 0 ;local v93= -1;local v94={};local v95={...};local v96=v20("#",...) -1 ;local v97={};local v98={};for v107=0,v96 do if (v107>=v90) then v94[v107-v90 ]=v95[v107 + (958 -(892 + 65)) ];else v98[v107]=v95[v107 + 1 ];end end local v99=(v96-v90) + 1 ;local v100;local v101;while true do v100=v88[v92];v101=v100[1];if (v101<=51) then if (v101<=25) then if (v101<=(28 -16)) then if (v101<=5) then if (v101<=2) then if (v101<=0) then local v135=0;local v136;local v137;local v138;while true do if (v135==0) then v136=v100[2];v137=v98[v136];v135=1;end if (1==v135) then v138=v98[v136 + 2 ];if (v138>0) then if (v137>v98[v136 + 1 ]) then v92=v100[3];else v98[v136 + 3 ]=v137;end elseif (v137<v98[v136 + 1 ]) then v92=v100[3];else v98[v136 + 3 ]=v137;end break;end end elseif (v101>1) then v98[v100[2]]=v98[v100[3]];else local v194=v100[2];v98[v194]=v98[v194](v98[v194 + 1 ]);end elseif (v101<=3) then local v139=0;local v140;while true do if (0==v139) then v140=v98[v100[4]];if  not v140 then v92=v92 + 1 ;else local v396=0;while true do if (v396==0) then v98[v100[2]]=v140;v92=v100[5 -2 ];break;end end end break;end end elseif (v101==4) then v98[v100[2]]=v98[v100[3]] + v100[4] ;else v98[v100[2]]=v98[v100[3]] * v98[v100[4]] ;end elseif (v101<=8) then if (v101<=6) then local v141=0;local v142;local v143;local v144;local v145;while true do if (v141==2) then for v381=v142,v93 do v145=v145 + 1 ;v98[v381]=v143[v145];end break;end if (v141==1) then v93=(v144 + v142) -1 ;v145=350 -(87 + 263) ;v141=2;end if (v141==0) then v142=v100[2];v143,v144=v91(v98[v142](v21(v98,v142 + (1 -0) ,v93)));v141=1;end end elseif (v101>7) then v98[v100[2]][v100[3]]=v98[v100[4]];else v98[v100[182 -(67 + 113) ]]=v98[v100[3]][v100[4]];end elseif (v101<=10) then if (v101==9) then local v202=v100[2];local v203,v204=v91(v98[v202](v21(v98,v202 + 1 ,v93)));v93=(v204 + v202) -1 ;local v205=0;for v336=v202,v93 do local v337=0;while true do if (v337==0) then v205=v205 + 1 ;v98[v336]=v203[v205];break;end end end else local v206=0;local v207;while true do if (v206==0) then v207=v100[2];v98[v207](v21(v98,v207 + 1 ,v100[3]));break;end end end elseif (v101==11) then if (v98[v100[2]]==v98[v100[4]]) then v92=v92 + 1 + 0 ;else v92=v100[3];end else v98[v100[2]][v100[3]]=v98[v100[4]];end elseif (v101<=18) then if (v101<=15) then if (v101<=13) then local v146=v100[2];v98[v146](v21(v98,v146 + 1 ,v100[7 -4 ]));elseif (v101==14) then v98[v100[2]][v98[v100[3]]]=v100[4];else v98[v100[2]]=v98[v100[3]] + v98[v100[4]] ;end elseif (v101<=(12 + 4)) then v98[v100[2]]=v100[11 -8 ];elseif (v101==17) then v98[v100[2]]={};else v98[v100[2]]=v98[v100[3]] -v98[v100[4]] ;end elseif (v101<=21) then if (v101<=19) then local v149=v100[2];local v150={v98[v149]()};local v151=v100[4];local v152=0;for v185=v149,v151 do local v186=0;while true do if (0==v186) then v152=v152 + (953 -(802 + 150)) ;v98[v185]=v150[v152];break;end end end elseif (v101>20) then local v215=0;local v216;while true do if (v215==0) then v216=v100[2];do return v21(v98,v216,v216 + v100[3] );end break;end end else local v217=v100[2];v98[v217]=v98[v217](v21(v98,v217 + 1 ,v93));end elseif (v101<=23) then if (v101>22) then do return v98[v100[5 -3 ]]();end elseif  not v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end elseif (v101>24) then v98[v100[2]]= #v98[v100[3]];elseif (v98[v100[2]]==v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[5 -2 ];end elseif (v101<=(28 + 10)) then if (v101<=(1028 -(915 + 82))) then if (v101<=28) then if (v101<=(73 -47)) then for v187=v100[2],v100[3] do v98[v187]=nil;end elseif (v101>27) then local v220=0;local v221;local v222;local v223;while true do if (0==v220) then v221=v100[2];v222={v98[v221](v98[v221 + 1 ])};v220=1;end if (v220==1) then v223=0;for v426=v221,v100[4] do v223=v223 + 1 ;v98[v426]=v222[v223];end break;end end else v98[v100[2]][v98[v100[3]]]=v98[v100[4]];end elseif (v101<=29) then v98[v100[2]]=v98[v100[3]] * v98[v100[4]] ;elseif (v101>30) then v98[v100[2]]();else do return v98[v100[2]]();end end elseif (v101<=34) then if (v101<=32) then v98[v100[2]]=v100[3] + v98[v100[4]] ;elseif (v101==33) then if (v100[2]==v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end else v98[v100[2]]=v100[3] + v98[v100[4]] ;end elseif (v101<=36) then if (v101>35) then local v227=v89[v100[3]];local v228;local v229={};v228=v18({},{[v7("\69\179\244\66\192\127\148","\164\26\236\157\44")]=function(v338,v339) local v340=0;local v341;while true do if (v340==0) then v341=v229[v339];return v341[1][v341[2]];end end end,[v7("\115\112\85\47\5\69\65\95\47\10","\114\44\47\59\74")]=function(v342,v343,v344) local v345=0;local v346;while true do if (v345==0) then v346=v229[v343];v346[1][v346[2]]=v344;break;end end end});for v347=1,v100[4] do local v348=0;local v349;while true do if (v348==0) then v92=v92 + 1 ;v349=v88[v92];v348=1;end if (v348==1) then if (v349[1]==2) then v229[v347-(1 + 0) ]={v98,v349[3]};else v229[v347-1 ]={v75,v349[3]};end v97[ #v97 + 1 ]=v229;break;end end end v98[v100[2]]=v40(v227,v228,v76);else local v231=0;local v232;while true do if (v231==0) then v232=v100[2];v98[v232]=v98[v232]();break;end end end elseif (v101==37) then if (v98[v100[2]]<=v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end else v98[v100[2]]();end elseif (v101<=44) then if (v101<=41) then if (v101<=39) then local v155=v100[2];do return v98[v155],v98[v155 + 1 ];end elseif (v101==(1227 -(1069 + 118))) then local v233=v100[2];local v234=v98[v233];for v350=v233 + 1 ,v93 do v15(v234,v98[v350]);end else local v235=0;local v236;local v237;local v238;local v239;while true do if (0==v235) then v236=v100[4 -2 ];v237,v238=v91(v98[v236](v21(v98,v236 + 1 ,v100[3])));v235=1;end if (v235==1) then v93=(v238 + v236) -1 ;v239=0;v235=2;end if (v235==2) then for v434=v236,v93 do local v435=0;while true do if (0==v435) then v239=v239 + 1 ;v98[v434]=v237[v239];break;end end end break;end end end elseif (v101<=42) then v98[v100[3 -1 ]]=v98[v100[3]][v100[4]];elseif (v101==43) then if (v98[v100[2]]==v100[4]) then v92=v92 + 1 ;else v92=v100[3];end else v98[v100[2]]=v98[v100[3]] -v98[v100[4]] ;end elseif (v101<=47) then if (v101<=45) then local v158=0;local v159;local v160;local v161;while true do if (v158==2) then if (v160>0) then if (v161<=v98[v159 + 1 ]) then local v460=0;while true do if (v460==0) then v92=v100[3];v98[v159 + 3 ]=v161;break;end end end elseif (v161>=v98[v159 + 1 ]) then v92=v100[3];v98[v159 + 3 ]=v161;end break;end if (v158==1) then v161=v98[v159] + v160 ;v98[v159]=v161;v158=2;end if (v158==0) then v159=v100[2];v160=v98[v159 + 2 ];v158=1;end end elseif (v101>46) then v92=v100[3];else local v242=v100[1 + 1 ];do return v98[v242](v21(v98,v242 + 1 ,v100[3]));end end elseif (v101<=49) then if (v101>48) then local v243=0;local v244;while true do if (v243==0) then v244=v100[2];do return v98[v244],v98[v244 + 1 ];end break;end end else local v245=v100[2];do return v21(v98,v245,v93);end end elseif (v101==(88 -38)) then local v246=0;local v247;local v248;local v249;while true do if (v246==1) then v249=0;for v436=v247,v100[4] do local v437=0;while true do if (0==v437) then v249=v249 + 1 ;v98[v436]=v248[v249];break;end end end break;end if (v246==0) then v247=v100[2];v248={v98[v247](v98[v247 + 1 + 0 ])};v246=1;end end else v98[v100[2]]=v76[v100[3]];end elseif (v101<=77) then if (v101<=64) then if (v101<=57) then if (v101<=54) then if (v101<=52) then if (v100[2]==v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101>(844 -(368 + 423))) then do return;end else v98[v100[2]]=v98[v100[3]] * v100[4] ;end elseif (v101<=55) then local v162=v100[2];v98[v162](v21(v98,v162 + 1 ,v93));elseif (v101>(175 -119)) then v98[v100[2]]=v100[3];else local v256=0;local v257;while true do if (v256==0) then v257=v100[20 -(10 + 8) ];do return v98[v257](v21(v98,v257 + 1 ,v100[3]));end break;end end end elseif (v101<=60) then if (v101<=58) then local v163=0;local v164;local v165;while true do if (v163==0) then v164=v100[2];v165=v98[v100[3]];v163=1;end if (1==v163) then v98[v164 + 1 ]=v165;v98[v164]=v165[v100[4]];break;end end elseif (v101==(226 -167)) then if (v98[v100[2]]<=v98[v100[4]]) then v92=v92 + (443 -(416 + 26)) ;else v92=v100[9 -6 ];end else v98[v100[2]]=v76[v100[3]];end elseif (v101<=62) then if (v101==61) then v98[v100[2]]=v75[v100[3]];else v98[v100[2]]={};end elseif (v101>63) then local v263=v100[2];local v264,v265=v91(v98[v263](v21(v98,v263 + 1 ,v100[3])));v93=(v265 + v263) -1 ;local v266=0;for v359=v263,v93 do local v360=0;while true do if (v360==0) then v266=v266 + 1 ;v98[v359]=v264[v266];break;end end end else v98[v100[2]]= #v98[v100[3]];end elseif (v101<=70) then if (v101<=67) then if (v101<=65) then v98[v100[2]]=v98[v100[2 + 1 ]];elseif (v101>66) then local v268=v100[3];local v269=v98[v268];for v361=v268 + 1 ,v100[4] do v269=v269   .. v98[v361] ;end v98[v100[2]]=v269;else v92=v100[3];end elseif (v101<=68) then v98[v100[2]][v98[v100[3]]]=v98[v100[4]];elseif (v101>69) then local v272=v100[2];do return v21(v98,v272,v93);end else local v273=v100[3 -1 ];local v274=v98[v273];for v362=v273 + 1 ,v93 do v15(v274,v98[v362]);end end elseif (v101<=73) then if (v101<=(509 -(145 + 293))) then v98[v100[2]]=v75[v100[3]];elseif (v101>72) then local v275=0;local v276;while true do if (v275==0) then v276=v100[2];v98[v276]=v98[v276](v98[v276 + 1 ]);break;end end else local v277=0;local v278;while true do if (v277==0) then v278=v100[2];v98[v278](v98[v278 + 1 ]);break;end end end elseif (v101<=75) then if (v101==74) then v98[v100[2]]=v98[v100[3]]%v98[v100[4]] ;else local v280=0;local v281;while true do if (0==v280) then v281=v100[2];v98[v281]=v98[v281]();break;end end end elseif (v101>76) then v98[v100[2]]=v98[v100[3]] * v100[434 -(44 + 386) ] ;else local v283=0;local v284;local v285;local v286;while true do if (v283==0) then v284=v100[2];v285=v98[v284];v283=1;end if (v283==1) then v286=v98[v284 + (1488 -(998 + 488)) ];if (v286>0) then if (v285>v98[v284 + 1 ]) then v92=v100[3];else v98[v284 + 1 + 2 ]=v285;end elseif (v285<v98[v284 + 1 ]) then v92=v100[3];else v98[v284 + 3 ]=v285;end break;end end end elseif (v101<=90) then if (v101<=83) then if (v101<=80) then if (v101<=78) then local v172=0;local v173;local v174;while true do if (v172==1) then v98[v173 + (773 -(201 + 571)) ]=v174;v98[v173]=v174[v100[4]];break;end if (v172==0) then v173=v100[2 + 0 ];v174=v98[v100[3]];v172=1;end end elseif (v101>79) then local v287=0;local v288;while true do if (v287==0) then v288=v100[2];v98[v288](v21(v98,v288 + 1 ,v93));break;end end else local v289=0;local v290;while true do if (0==v289) then v290=v100[2];v98[v290](v98[v290 + 1 ]);break;end end end elseif (v101<=81) then local v175=v100[1140 -(116 + 1022) ];local v176=v100[4];local v177=v175 + 2 ;local v178={v98[v175](v98[v175 + 1 ],v98[v177])};for v189=1,v176 do v98[v177 + v189 ]=v178[v189];end local v179=v178[1];if v179 then v98[v177]=v179;v92=v100[3];else v92=v92 + 1 ;end elseif (v101>(341 -259)) then local v293=0;local v294;local v295;local v296;local v297;while true do if (v293==2) then for v440=v294,v93 do local v441=0;while true do if (v441==0) then v297=v297 + 1 ;v98[v440]=v295[v297];break;end end end break;end if (0==v293) then v294=v100[2];v295,v296=v91(v98[v294](v98[v294 + 1 ]));v293=1;end if (v293==1) then v93=(v296 + v294) -(1 + 0) ;v297=0;v293=2;end end else v98[v100[7 -5 ]]=v98[v100[3]]%v100[4] ;end elseif (v101<=(305 -219)) then if (v101<=84) then if (v98[v100[2]]==v100[863 -(814 + 45) ]) then v92=v92 + (2 -1) ;else v92=v100[1 + 2 ];end elseif (v101>85) then v98[v100[2]]=v98[v100[2 + 1 ]]%v98[v100[889 -(261 + 624) ]] ;else do return;end end elseif (v101<=88) then if (v101==(154 -67)) then local v301=0;local v302;while true do if (v301==0) then v302=v100[2];v98[v302]=v98[v302](v21(v98,v302 + (1081 -(1020 + 60)) ,v100[3]));break;end end else v98[v100[2]][v98[v100[3]]]=v100[4];end elseif (v101>89) then local v305=v100[2];local v306=v100[4];local v307=v305 + 2 ;local v308={v98[v305](v98[v305 + 1 ],v98[v307])};for v368=1,v306 do v98[v307 + v368 ]=v308[v368];end local v309=v308[1];if v309 then local v393=0;while true do if (v393==0) then v98[v307]=v309;v92=v100[3];break;end end else v92=v92 + 1 ;end else local v310=0;local v311;while true do if (v310==0) then v311=v100[2];v98[v311]=v98[v311](v21(v98,v311 + 1 ,v93));break;end end end elseif (v101<=96) then if (v101<=93) then if (v101<=91) then if  not v98[v100[2]] then v92=v92 + 1 ;else v92=v100[1426 -(630 + 793) ];end elseif (v101>92) then if v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end else local v313=v100[2];local v314={v98[v313]()};local v315=v100[13 -9 ];local v316=0;for v371=v313,v315 do local v372=0;while true do if (v372==0) then v316=v316 + 1 ;v98[v371]=v314[v316];break;end end end end elseif (v101<=94) then local v180=0;local v181;local v182;local v183;while true do if (v180==1) then v183=v98[v181] + v182 ;v98[v181]=v183;v180=2;end if (v180==0) then v181=v100[2];v182=v98[v181 + 2 ];v180=1;end if (v180==2) then if (v182>0) then if (v183<=v98[v181 + 1 ]) then v92=v100[3];v98[v181 + (14 -11) ]=v183;end elseif (v183>=v98[v181 + 1 ]) then local v467=0;while true do if (v467==0) then v92=v100[3];v98[v181 + 2 + 1 ]=v183;break;end end end break;end end elseif (v101>95) then if v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end else local v317=0;local v318;while true do if (v317==0) then v318=v98[v100[4]];if  not v318 then v92=v92 + 1 ;else v98[v100[6 -4 ]]=v318;v92=v100[3];end break;end end end elseif (v101<=99) then if (v101<=97) then v98[v100[2]]=v98[v100[1750 -(760 + 987) ]] + v100[4] ;elseif (v101>98) then for v376=v100[2],v100[1916 -(1789 + 124) ] do v98[v376]=nil;end else local v319=0;local v320;local v321;local v322;while true do if (v319==2) then for v444=767 -(745 + 21) ,v100[4] do v92=v92 + 1 ;local v445=v88[v92];if (v445[1]==2) then v322[v444-1 ]={v98,v445[7 -4 ]};else v322[v444-1 ]={v75,v445[3]};end v97[ #v97 + 1 ]=v322;end v98[v100[2]]=v40(v320,v321,v76);break;end if (v319==1) then v322={};v321=v18({},{[v7("\59\140\44\223\209\1\171","\181\100\211\69\177")]=function(v447,v448) local v449=0;local v450;while true do if (v449==0) then v450=v322[v448];return v450[1][v450[2]];end end end,[v7("\54\244\185\95\30\194\185\94\12\211","\58\105\171\215")]=function(v451,v452,v453) local v454=v322[v452];v454[1][v454[2]]=v453;end});v319=2;end if (v319==0) then v320=v89[v100[3]];v321=nil;v319=1;end end end elseif (v101<=101) then if (v101==100) then v98[v100[2]]=v98[v100[3]]%v100[4] ;else local v324=v100[2];v98[v324]=v98[v324](v21(v98,v324 + 1 ,v100[3]));end elseif (v101>102) then local v326=v100[2];local v327,v328=v91(v98[v326](v98[v326 + 1 ]));v93=(v328 + v326) -1 ;local v329=0;for v378=v326,v93 do v329=v329 + 1 ;v98[v378]=v327[v329];end else v98[v100[2]]=v98[v100[3]] + v98[v100[4]] ;end v92=v92 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
